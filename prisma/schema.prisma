generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  image     String?  // Implementar o quitar en el futuro
  isAdmin   Boolean  @default(false) // Distinción entre usuario regular y admin
  sessions  Session[] // Relación con la tabla de sesiones
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  novels    Novel[]  // Relación con las novelas creadas por el usuario
}

model Session {
  id          Int      @id @default(autoincrement())
  userId      Int
  sessionToken String  @unique // Token de sesión de NextAuth
  expires     DateTime  
  user        User      @relation(fields: [userId], references: [id])
}

model Novel {
  id         Int          @id @default(autoincrement())
  title      String
  synopsis   String        
  authorId   Int       
  author     User         @relation(fields: [authorId], references: [id]) // Relación con el autor
  genres     NovelGenre[] // Relación con los géneros de la novela
  chapters   Chapter[]    // Relación con los capítulos de la novela
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model Genre {
  id       Int          @id @default(autoincrement())
  name     String       @unique
  novels   NovelGenre[] // Relación con las novelas
}

model NovelGenre {  // Relación intermedia entre novelas y géneros
  novelId Int 
  genreId Int
  novel   Novel @relation(fields: [novelId], references: [id])
  genre   Genre @relation(fields: [genreId], references: [id])

  @@id([novelId, genreId]) 
}

model Chapter {
  id          Int      @id @default(autoincrement())
  novelId     Int      // Relación con la novela a la que pertenece el capítulo
  title       String   
  content     String   
  authorNotes String?  // Comentarios opcionales del autor
  novel       Novel    @relation(fields: [novelId], references: [id]) // Relación con la novela
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
